@page "/"
@using System.Security.Claims

<PageTitle>Home</PageTitle>

<AuthorizeView>
    <NotAuthorized>
        <h3>Hello, anonymous user!</h3>
    </NotAuthorized>
    
    <Authorized>
        <h3>Hello, @context.User.Identity?.Name!</h3>
        <br/>
        Claims from the cookie:
        <table class="table">
            <thead>
            <tr>
                <th>Claim Type</th>
                <th>Value</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var claim in _claims)
            {
                <tr>
                    <td>@claim.Type</td>
                    <td>@claim.Value</td>
                </tr>
            }
            </tbody>
        </table>
    </Authorized>
</AuthorizeView>

@code {
    // AuthenticationStateProvider service provides the current user's ClaimsPrincipal data.
    [Inject]
    private AuthenticationStateProvider AuthenticationStateProvider { get; set; } = null!;

    string? _authMessage;
    IEnumerable<Claim> _claims = Enumerable.Empty<Claim>();
    
    protected override async Task OnInitializedAsync()
    {
        await GetClaimsPrincipalData();
    }
    
    private async Task GetClaimsPrincipalData()
    {
        // Gets an AuthenticationState that describes the current user.
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

        var user = authState.User;

        // Checks if the user has been authenticated.
        if (user.Identity.IsAuthenticated)
        {
            _authMessage = "You are authenticated.";

            // Sets the claims value in _claims variable.
            // The claims mentioned in printClaims variable are selected only.
            _claims = user.Claims;
        }
    }
}