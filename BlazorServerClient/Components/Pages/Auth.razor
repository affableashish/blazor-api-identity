@page "/github/auth"
@using System.Security.Claims
@using System.Globalization

@attribute [Authorize(Policy = "github-user-read")]

@* NavigationManager.NavigateTo(url, true); // If you use it like this, this will take you to the url *@
@inject NavigationManager NavigationManager
@inject IConfiguration Configuration
@inject HttpClient HttpClient
@* Used in interactive scenario *@
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Auth</PageTitle>

<AuthorizeView>
    <h3>Hello, @context.User.Identity?.Name!</h3>
    <p>You can view this page because you are authorized with "github-user-read" policy. </p>
</AuthorizeView>

@code{
    [CascadingParameter]
    public HttpContext HttpContext { get; set; } = default!;
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }
    
    private string GetUserInfoFromGitHub()
    {
        var userFromHttpContext = HttpContext.User;
        var accessToken = userFromHttpContext.FindFirstValue("github-access-token")!;
        return $"Look this is some made-up token from GitHub: {accessToken}";
        
        // var userInfoEndpoint = Configuration["Authentication:GitHub:UserInformationEndpoint"]!;
        // using var request = new HttpRequestMessage(HttpMethod.Get, userInfoEndpoint);
        // request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", accessToken);
        // using var result = await HttpClient.SendAsync(request);
        // return await result.Content.ReadAsStringAsync();
    }
    
    // This will create a Uri like this: https://localhost:7074. Not being used though.
    private string CreateBaseUriInSsrScenario()
    {
        var request = HttpContext.Request;
        var baseUri = string.Format(
            CultureInfo.InvariantCulture,
            "{0}://{1}/{2}",
            request.Scheme, // https
            request.Host.ToString(), // localhost:7074
            request.PathBase.ToString().TrimStart('/'));
        return baseUri.TrimEnd('/');
    }
}
