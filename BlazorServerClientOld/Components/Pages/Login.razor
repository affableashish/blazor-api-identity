@page "/login"

@inject IdentityClient IdentityClient

<h3>Login</h3>

<EditForm Model="@this" class="form-horizontal py-5" OnValidSubmit="@LoginUser">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="username" class="form-label">User name</label>
        <InputText id="username" class="form-control" @bind-Value="Username" />
        <ValidationMessage For="@(() => Username)" />
    </div>
    <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="Password" />
        <ValidationMessage For="@(() => Password)" />
    </div>
    <div>
        <button class="btn btn-primary">Login</button>
    </div>
</EditForm>

<div class="form-horizontal">
    @foreach (var provider in SocialProviders)
    {
        <a class="btn btn-secondary m-1" role="button" href="auth/login/@provider">@provider</a>
    }
</div>

@if (!string.IsNullOrEmpty(_alertMessage))
{
    <div class="alert alert-danger">@_alertMessage</div>
}

@code {
    string? _alertMessage;

    [Required]
    public string? Username { get; set; }

    [Required] 
    public string? Password { get; set; }
    
    [Parameter]
    public string[] SocialProviders { get; set; } = Array.Empty<string>();

    async Task LoginUser()
    {
        _alertMessage = null;
        if (await IdentityClient.LoginAsync(Username, Password))
        {
        }
        else
        {
            _alertMessage = "Login failed";
        }
    }
}